unit Uteste;

//  *************************************************
//    Generated By: JsonToDelphiClass 
//    Project link original: https://github.com/PKGeorgiev/Delphi-JsonToDelphiClass
//    Generated On         : 2021-08-13 16:49:39
//  *************************************************
//    Created By           : Petar Georgiev - 2014
//    WebSite              : http://pgeorgiev.com
//  *************************************************
//    Updated By           : Janailson Rocha - 2021
//    WebSite              : 
//  *************************************************

interface

uses Generics.Collections, Rest.Json, Classes;

type

TTeste = class(TPersistent)
private
  FCodFranqueador: Extended;
  FCodLoja: Extended;
  FDataFinal: TDate;
  FDataInicial: TDate;
  FExibirVendasCanceladas: Boolean;
published
  property codFranqueador: Extended read FCodFranqueador write FCodFranqueador;
  property codLoja: Extended read FCodLoja write FCodLoja;
  property dataFinal: TDate read FDataFinal write FDataFinal;
  property dataInicial: TDate read FDataInicial write FDataInicial;
  property exibirVendasCanceladas: Boolean read FExibirVendasCanceladas write FExibirVendasCanceladas;
public
  function ToJsonString: string;
  class function FromJsonString(AJsonString: string): TTeste;
end;

implementation

{TTeste}


function TTeste.ToJsonString: string;
begin
  result := TJson.ObjectToJsonString(self);
end;

class function TTeste.FromJsonString(AJsonString: string): TTeste;
begin
  result := TJson.JsonToObject<TTeste>(AJsonString)
end;

end.
